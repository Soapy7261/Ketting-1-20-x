--- a/net/minecraft/world/level/block/StemBlock.java
+++ b/net/minecraft/world/level/block/StemBlock.java
@@ -65,32 +_,39 @@
    }
 
    public void randomTick(BlockState p_222538_, ServerLevel p_222539_, BlockPos p_222540_, RandomSource p_222541_) {
+      if (!p_222539_.isAreaLoaded(p_222540_, 1)) return; // Forge: prevent loading unloaded chunks when checking neighbor's light
       if (p_222539_.getRawBrightness(p_222540_, 0) >= 9) {
          float f = CropBlock.getGrowthSpeed(this, p_222539_, p_222540_);
-         if (p_222541_.nextInt((int)(25.0F / f) + 1) == 0) {
+         if (net.minecraftforge.common.ForgeHooks.onCropsGrowPre(p_222539_, p_222540_, p_222538_, p_222541_.nextFloat() < ((this == Blocks.PUMPKIN_STEM ? p_222539_.spigotConfig.pumpkinModifier : p_222539_.spigotConfig.melonModifier) / (100.0f * (Math.floor((25.0F / f) + 1)))))) { // Spigot - SPIGOT-7159: Better modifier resolution
             int i = p_222538_.getValue(AGE);
             if (i < 7) {
                p_222538_ = p_222538_.setValue(AGE, Integer.valueOf(i + 1));
-               p_222539_.setBlock(p_222540_, p_222538_, 2);
+               org.bukkit.craftbukkit.v1_20_R3.event.CraftEventFactory.handleBlockGrowEvent(p_222539_, p_222540_, p_222538_, 2); // CraftBukkit
             } else {
                Direction direction = Direction.Plane.HORIZONTAL.getRandomDirection(p_222541_);
                BlockPos blockpos = p_222540_.relative(direction);
                BlockState blockstate = p_222539_.getBlockState(blockpos.below());
+// Forge: TODO: Soil blockstate.canSustainPlant(p_222539_, blockpos.below(), Direction.UP, this.fruit)
                if (p_222539_.getBlockState(blockpos).isAir() && (blockstate.is(Blocks.FARMLAND) || blockstate.is(BlockTags.DIRT))) {
                   Registry<Block> registry = p_222539_.registryAccess().registryOrThrow(Registries.BLOCK);
                   Optional<Block> optional = registry.getOptional(this.fruit);
                   Optional<Block> optional1 = registry.getOptional(this.attachedStem);
                   if (optional.isPresent() && optional1.isPresent()) {
                      p_222539_.setBlockAndUpdate(blockpos, optional.get().defaultBlockState());
+                     // CraftBukkit start
+                     if (!org.bukkit.craftbukkit.v1_20_R3.event.CraftEventFactory.handleBlockGrowEvent(p_222539_, blockpos, optional.get().defaultBlockState())) {
+                        return;
+                     }
+                     // CraftBukkit end
                      p_222539_.setBlockAndUpdate(p_222540_, optional1.get().defaultBlockState().setValue(HorizontalDirectionalBlock.FACING, direction));
                   }
                }
+               }
             }
+            net.minecraftforge.common.ForgeHooks.onCropsGrowPost(p_222539_, p_222540_, p_222538_);
          }
 
       }
-   }
-
    public ItemStack getCloneItemStack(LevelReader p_312829_, BlockPos p_57027_, BlockState p_57028_) {
       return new ItemStack(DataFixUtils.orElse(p_312829_.registryAccess().registryOrThrow(Registries.ITEM).getOptional(this.seed), this));
    }
@@ -105,8 +_,8 @@
 
    public void performBonemeal(ServerLevel p_222528_, RandomSource p_222529_, BlockPos p_222530_, BlockState p_222531_) {
       int i = Math.min(7, p_222531_.getValue(AGE) + Mth.nextInt(p_222528_.random, 2, 5));
-      BlockState blockstate = p_222531_.setValue(AGE, Integer.valueOf(i));
-      p_222528_.setBlock(p_222530_, blockstate, 2);
+      BlockState blockstate = p_222531_.setValue(AGE, i);
+      org.bukkit.craftbukkit.v1_20_R3.event.CraftEventFactory.handleBlockGrowEvent(p_222528_, p_222530_, blockstate, 2); // CraftBukkit
       if (i == 7) {
          blockstate.randomTick(p_222528_, p_222530_, p_222528_.random);
       }
@@ -115,5 +_,11 @@
 
    protected void createBlockStateDefinition(StateDefinition.Builder<Block, BlockState> p_57040_) {
       p_57040_.add(AGE);
+   }
+
+   //FORGE START
+   @Override
+   public net.minecraftforge.common.PlantType getPlantType(BlockGetter world, BlockPos pos) {
+      return net.minecraftforge.common.PlantType.CROP;
    }
 }
